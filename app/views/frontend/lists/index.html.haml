- model_class = List
%p
%p
/TBD: refactor, Same form as search_index except 'id' field
= form_tag lists_path, :method => :get, remote: true do
  %p
    = text_field_tag :search, params[:search], :id => "gmaps-input-address", :input_html =>{:id => 'gmaps-input-address'}, :placeholder => 'Start typing a place...'
    = submit_tag "Search Near", :name => nil, :id=>"ajax" 

//Adding filter
= form_for_filterrific @filterrific do |f|
  .row
    .col-md-3
      .form-group.chardin_box{ :'data-position' => 'top', :'data-intro' => 'Search by bike title' }
        %label Search
        = f.text_field :search_query,
                       :class => 'filterrific-periodically-observed form-control'
    .col-md-3
      .form-group.chardin_box{ :'data-position' => 'top', :'data-intro' => 'Filter by country.' }
        %label 
        = f.text_field :with_rider_height, :class => 'form-control'
                        
    .col-md-2
      .form-group.chardin_box{ :'data-position' => 'top', :'data-intro' => 'Filter by listed date.' }
        %label Listed after
        = f.text_field :with_created_at_gte,
                       :class => 'js-datepicker form-control'

/ #results
/   = render :partial => 'students/list',
/            :locals => { :students => @students }


.row.no-gutter
  .col-lg-8.col-md-6.col-sm-6.hidden-xs
    #map

  .col-lg-4.col-md-6.col-sm-6
    #main-list
      %ul.media-list
        #ride
        #rides
          = render @lists 
        


= link_to t('.new', :default => t("helpers.links.new")), new_list_path, :class => 'btn btn-primary'



%script{:src => "//google-maps-utility-library-v3.googlecode.com/svn/tags/markerclustererplus/2.0.14/src/markerclusterer_packed.js"}
%script{:src => "//google-maps-utility-library-v3.googlecode.com/svn/tags/infobox/1.1.9/src/infobox_packed.js", :type => "text/javascript"}



:javascript

  $(document).ready(function(){
  
  

  var handler = Gmaps.build('Google');
  handler.buildMap({ provider: {}, internal: {id: 'map'}}, function(){
    markers = handler.addMarkers(#{raw @hash.to_json });
    handler.bounds.extendWith(markers);
    handler.fitMapToBounds();
  });
  });


  $('.js-datepicker').datepicker();
  $('#overlayTrigger').click(function(event) {
    event.preventDefault();
    $('body').chardinJs('start');
  });
  